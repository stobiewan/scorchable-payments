// Generated by https://pagedraw.io/pages/12008
import React from 'react';
import Leftbutton from './leftbutton';
import Outgoingactionsmultistate from './outgoingactionsmultistate';
import Rightbutton from './rightbutton';
import Incomingactionsmultistate from './incomingactionsmultistate';
import './centraltabgroup.css';
import ContractForm from '../components/ContractForm'

import ContractData from '../components/ContractData'

import AccountData from '../components/AccountData'

export default class Centraltabgroup extends React.Component {
  render() {
    return (
      <div className="centraltabgroup">
          { (this.props.state === "1") ?
              <div className="centraltabgroup-1-3">
                  <div className="centraltabgroup-0-0-0" /> 
                  <div className="centraltabgroup-0-0-1">
                      <div className="centraltabgroup-0-0-1-0" /> 
                      <div className="centraltabgroup-titletext-2">
                          Scorchable Payments Overview
                      </div>
                      <div className="centraltabgroup-0-0-1-2" /> 
                  </div>
                  <div className="centraltabgroup-0-0-2" /> 
                  <div className="centraltabgroup-0-0-3">
                      <div className="centraltabgroup-0-0-3-0" /> 
                      <div className="centraltabgroup-summarytext-9">
                          {"Scorchable payments are a simple method for making payments in Dai or ether with more safety than direct transfers for everyone. They are free  and have no centralised third party controlling escrows. Neither party can benefit from dishonouring the deal so there is no incentive for scams to ever occur. The process follows three stages:"}
                      </div>
                      <div className="centraltabgroup-0-0-3-2" /> 
                  </div>
                  <div className="centraltabgroup-0-0-4" /> 
                  <div className="centraltabgroup-0-0-5">
                      <div className="centraltabgroup-0-0-5-0" /> 
                      <div className="centraltabgroup-phasestext-2">
                          <div>{"1 -> A payer creates a payment by sending Dai or ether into the contract and specifying who can receive it and what bond they should pay. During this stage the payer can cancel the payment to reclaim all of the funds unless the bond was zero."}</div>
                          <br/>
                          <br/>
                          <div>{"2 -> The payee can pay the bond to remove the payers option to cancel the payment."}</div>
                          <br/>
                          <br/>
                          <div>{"3 -> The payer can release any portion of the funds (payment plus bond) to the payee, or scorch them (funds lost to both parties). The payee can also send the funds back to the payer in case they can not fulfil their end. If the payer fails to act before the timeout date, or extend the timeout date, the payee may claim the funds."}</div>
                      </div>
                      <div className="centraltabgroup-0-0-5-2" /> 
                  </div>
                  <div className="centraltabgroup-0-0-6" /> 
                  <div className="centraltabgroup-0-0-7">
                      <div className="centraltabgroup-this_process_means_the_buyer_can_not_gain_the_good_or_service_without_also_losing_the_payment_and_the_seller_can_not_gain_the_funds_then_never_provide_the_good_or_service_the_seller_can_not_cause_the_buyer_to_lose_their_funds_without_also_losing_their_bond_and_the_payer_enters_the_destination_address_so_can_be_sure_it_is_not_an_extortion_contract_as_the_buyer_and_seller_know_who_each_other_are_to_some_degree_they_have_incentives_to_complete_the_trade_well_as_their_reputation_is_at_stake_-4">
                          This process means the buyer can not  gain the good or service without also losing the payment, and the seller can not  gain the funds then never provide the good or service. The seller can not cause the buyer to lose their funds without also losing their bond and the payer enters the destination address so can be sure it is not an extortion contract. As the buyer and seller know who each other are to some degree they have incentives to complete the trade well as their reputation is at stake.
                      </div>
                  </div>
                  <div className="centraltabgroup-0-0-8" /> 
                  <div className="centraltabgroup-0-0-9">
                      <div className="centraltabgroup-0-0-9-0" /> 
                      <div className="centraltabgroup-donations_-_0">
                          <div>Donations - 0x300afbE08EE4619EC93524f9255CE59a013a5b63</div>
                          <div>{"https://github.com/stobiewan/scorchable-payments"}</div>
                          <div>Contract address 0x000</div>
                      </div>
                      <div className="centraltabgroup-0-0-9-2" /> 
                  </div>
                  <div className="centraltabgroup-0-0-10" /> 
              </div>
          : null}
          { (this.props.state === "2") ?
              <div className="centraltabgroup-2-0">
                  <div className="centraltabgroup-1-0-0" /> 
                  <div className="centraltabgroup-1-0-1">
                      <div className="centraltabgroup-1-0-1-0" /> 
                      <div className="centraltabgroup-rectangle_2">
                          <div className="centraltabgroup-1-0-1-1-0" /> 
                          <div className="centraltabgroup-1-0-1-1-1">
                              <div className="centraltabgroup-1-0-1-1-1-0" /> 
                              <div className="centraltabgroup-daisummarytext-1">
                                  Here you can approve this contract to transfer Dai from your balance. You need to do this before paying bonds or making payments with Dai. The contract can only transfer the Dai when you sign transactions requesting it to.
                              </div>
                              <div className="centraltabgroup-1-0-1-1-1-2" /> 
                          </div>
                          <div className="centraltabgroup-1-0-1-1-2" /> 
                          <div className="centraltabgroup-1-0-1-1-3">
                              <div className="centraltabgroup-1-0-1-1-3-0" /> 
                              <div className="centraltabgroup-rectangle-3">
                                  <div className="centraltabgroup-1-0-1-1-3-1-0">
                                      <div className="centraltabgroup-accountaddressplaceholder-2">
                                          <div>
                                              <AccountData accountIndex="0" units="ether" displayOption="onlyAddress"/>
                                          </div>
                                      </div>
                                  </div>
                                  <div className="centraltabgroup-1-0-1-1-3-1-1">
                                      <div className="centraltabgroup-accountbalanceplaceholder-8">
                                          <div>
                                              <AccountData accountIndex="0" units="ether" displayOption="onlyBalance"/>
                                          </div>
                                      </div>
                                  </div>
                                  <div className="centraltabgroup-1-0-1-1-3-1-2">
                                      <div className="centraltabgroup-owneddaiplaceholder-4">
                                          <div>
                                              <ContractData contract="ScorchablePayments" method="getDaiBalance" isTokenValue={1} prefix="Dai you own: " methodArgs={[this.props.selectedAccount]}/>
                                          </div>
                                      </div>
                                  </div>
                                  <div className="centraltabgroup-1-0-1-1-3-1-3">
                                      <div className="centraltabgroup-approveddaiplaceholder-8">
                                          <div>
                                              <ContractData contract="ScorchablePayments" method="getDaiAllowance" isTokenValue={1} prefix="Dai approved for contract: " methodArgs={[this.props.selectedAccount, "contractPlaceholder:ScorchablePayments"]}/>
                                          </div>
                                      </div>
                                  </div>
                                  <div className="centraltabgroup-1-0-1-1-3-1-4" /> 
                              </div>
                              <div className="centraltabgroup-1-0-1-1-3-2" /> 
                          </div>
                          <div className="centraltabgroup-1-0-1-1-4" /> 
                          <div className="centraltabgroup-1-0-1-1-5">
                              <div className="centraltabgroup-approvedaiplaceholder-4">
                                  <div>
                                      <ContractForm contract="ScorchablePayments" method="approveDai" purpose="Approve Dai" fixedParams={["contractPlaceholder:ScorchablePayments", -1]} paramNamesToScale={["wad"]} labels={["guy", "Dai Quantity"]}  placeholders={["0", "0"]}/> 
                                  </div>
                              </div>
                          </div>
                      </div>
                      <div className="centraltabgroup-1-0-1-2" /> 
                  </div>
                  <div className="centraltabgroup-1-0-2" /> 
              </div>
          : null}
          { (this.props.state === "3") ?
              <div className="centraltabgroup-3-4">
                  <div className="centraltabgroup-2-0-0">
                      <div className="centraltabgroup-2-0-0-0" /> 
                      <div className="centraltabgroup-createpaymentheader-6">
                          { "Create an ether or Dai payment, the funds will be then be stored in the smart contract. If the bond is set to above zero you will be able to cancel the payment and have all funds returned until the payee pays the bond. The timeout period is in seconds since the epoch, use " + (Math.round(Date.now() / 1000) + 2419200).toString() + " for the inaction timeout to set it to four weeks from now. You can extend the timeout at any time, if it expires before the payment is finalised the payee can claim the funds." }
                      </div>
                      <div className="centraltabgroup-2-0-0-2" /> 
                  </div>
                  <div className="centraltabgroup-2-0-1" /> 
                  <div className="centraltabgroup-2-0-2">
                      <div className="centraltabgroup-createpaymentplaceholder-6">
                          <div>
                              <ContractForm contract="ScorchablePayments" method="createPayment" purpose="Create Payment" fixedParams={[-1, -1, -1, -1, -1]} paramNamesToScale={["amountToPay", "payeeBondAmount"]} labels={["Payee address:", "Payment amount:", "Bond required:", "Inaction timeout s:", "Currency:"]}  placeholders={["0x0000000000000000000000000000000000000000", "0.0", "0.0", Math.round(Date.now() / 1000) + 2419200, "true"]} amountInputs={{"conditional": "isEthPayment", "value": "amountToPay"}}/> 
                          </div>
                      </div>
                  </div>
                  <div className="centraltabgroup-2-0-3" /> 
              </div>
          : null}
          { (this.props.state === "4") ?
              <div className="centraltabgroup-4-5">
                  <div className="centraltabgroup-3-0-0" /> 
                  <div className="centraltabgroup-3-0-1">
                      <div className="centraltabgroup-rectangle_4">
                          <div className="centraltabgroup-3-0-1-0-0">
                              <div className="centraltabgroup-leftbutton_instance-6">
                                  <Leftbutton onClick={(() => this.props.onChangeOutgoingIndex(-1))} /> 
                              </div>
                          </div>
                      </div>
                      <div className="centraltabgroup-3-0-1-1" /> 
                      <div className="centraltabgroup-3-0-1-2">
                          <div className="centraltabgroup-3-0-1-2-0">
                              <div className="centraltabgroup-outgoingpaymentsheader-1">
                                  {"These are the outgoing payments from your address. You can cycle through them and depending on their state cancel, release or scorch them. You can also top up the payment quantity and extend the timeout so the payee can't claim the payment at any time."}
                              </div>
                          </div>
                          <div className="centraltabgroup-3-0-1-2-1">
                              <div className="centraltabgroup-paymentindextext-1">
                                  { this.props.localOutgoingIndexString }
                              </div>
                          </div>
                          <div className="centraltabgroup-3-0-1-2-2">
                              <div className="centraltabgroup-outgoingactionsmultistate_instance-3">
                                  <Outgoingactionsmultistate outgoingPaymentIndex={this.props.outgoingPaymentIndex} outgoingPaymentDataCallback={this.props.outgoingPaymentDataCallback} outgoingPaymentUsesEth={this.props.outgoingPaymentUsesEth} getOutgoingAmountString={this.props.getOutgoingAmountString} /> 
                              </div>
                          </div>
                      </div>
                      <div className="centraltabgroup-3-0-1-3" /> 
                      <div className="centraltabgroup-rectangle_3">
                          <div className="centraltabgroup-3-0-1-4-0">
                              <div className="centraltabgroup-rightbutton_instance-5">
                                  <Rightbutton onClick={(() => this.props.onChangeOutgoingIndex(1))} /> 
                              </div>
                          </div>
                      </div>
                  </div>
                  <div className="centraltabgroup-3-0-2" /> 
              </div>
          : null}
          { (this.props.state === "5") ?
              <div className="centraltabgroup-5">
                  <div className="centraltabgroup-4-0-0" /> 
                  <div className="centraltabgroup-4-0-1">
                      <div className="centraltabgroup-rectangle_7">
                          <div className="centraltabgroup-4-0-1-0-0">
                              <div className="centraltabgroup-leftbutton_instance_2">
                                  <Leftbutton onClick={(() => this.props.onChangeIncomingIndex(-1))} /> 
                              </div>
                          </div>
                      </div>
                      <div className="centraltabgroup-4-0-1-1" /> 
                      <div className="centraltabgroup-4-0-1-2">
                          <div className="centraltabgroup-4-0-1-2-0">
                              <div className="centraltabgroup-incomingpaymentsheader-9">
                                  These are the ongoing payments which have been sent to your address. You can cycle through them to pay any required bonds, release them back to the sender or claim them if they have timed out.
                              </div>
                          </div>
                          <div className="centraltabgroup-4-0-1-2-1">
                              <div className="centraltabgroup-incomingpaymentindextext-8">
                                  { this.props.localIncomingIndexString }
                              </div>
                          </div>
                          <div className="centraltabgroup-4-0-1-2-2">
                              <div className="centraltabgroup-incomingactionsmultistate_instance-7">
                                  <Incomingactionsmultistate incomingPaymentIndex={this.props.incomingPaymentIndex} incomingPaymentDataCallback={this.props.incomingPaymentDataCallback} incomingPaymentEthBondSize={this.props.incomingPaymentEthBondSize} getIncomingAmountString={this.props.getIncomingAmountString} /> 
                              </div>
                          </div>
                      </div>
                      <div className="centraltabgroup-4-0-1-3" /> 
                      <div className="centraltabgroup-rectangle_8">
                          <div className="centraltabgroup-4-0-1-4-0">
                              <div className="centraltabgroup-rightbutton_instance_2">
                                  <Rightbutton onClick={(() => this.props.onChangeIncomingIndex(1))} /> 
                              </div>
                          </div>
                      </div>
                  </div>
                  <div className="centraltabgroup-4-0-2" /> 
              </div>
          : null}
      </div>
    );
  }
};
